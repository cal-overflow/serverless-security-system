name: Deploy Cloud Resources

on:
  push:
    branches:
      - main
      - frontend # TODO - remove
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  REGION: us-east-1
  STACK_NAME: security-system
  API_LAMBDA_FN_S3_KEY: lambda/apii${{ github.run_id	}}.zip
  UPLOAD_HANDLER_LAMBDA_FN_S3_KEY: lambda/upload_handler-${{ github.run_id }}.zip
  ATTACH_S3_NOTIFICATION_TO_LAMBDA_LAMBDA_FN_S3_KEY: lambda/attach_s3_upload_event_upload_handler_trigger-${{ github.run_id }}.zip
  STALE_VIDEO_REMOVER_LAMBDA_FN_S3_KEY: lambda/video_purger-${{ github.run_id }}.zip


jobs:
  deploy-management-stack:
    name: Deploy management stack
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cloud
    outputs:
      STACK_MANAGEMENT_BUCKET: ${{ steps.deploy_stack.outputs.bucket_name }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.IAM_ROLE_ARN }}
          aws-region: ${{ env.REGION }}
      
      - name: Deploy management-bucket stack
        id: deploy_stack
        run: |
          MANAGEMENT_BUCKET_STACK_NAME="$STACK_NAME-management-bucket-stack"

          sam deploy --region $REGION -t management-stack.template.yml --stack-name $MANAGEMENT_BUCKET_STACK_NAME
          STACK_MANAGEMENT_BUCKET=$(aws cloudformation describe-stacks --stack-name=$MANAGEMENT_BUCKET_STACK_NAME --region $REGION --query 'Stacks[0].Outputs[?OutputKey==`S3BucketName`].OutputValue' --output text)

          echo "BUCKET_NAME=$STACK_MANAGEMENT_BUCKET" >> $GITHUB_OUTPUT

  deploy-system-frontend:
    name: Deploy System UI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cloud
    steps:
      - name: Setup node
        uses: actions/setup-node@v2.1.5
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Bundle and upload system UI
        run: |
          API_URL=$(aws cloudformation describe-stacks --stack-name=$STACK_NAME --region $REGION --query 'Stacks[0].Outputs[?OutputKey==`APIUrl`].OutputValue' --output text)
          echo "NUXT_ENV_API_URL=$API_URL" >> .env
          npm run generate

          BUCKET=$(aws cloudformation describe-stacks --stack-name=$STACK_NAME --region $REGION --query 'Stacks[0].Outputs[?OutputKey==`FrontendS3BucketName`].OutputValue' --output text)
          aws s3 sync dist s3://$BUCKET


      - name: Generate Github Actions summary
        run: |
          API_URL=$(aws cloudformation describe-stacks --stack-name=$STACK_NAME --region $REGION --query 'Stacks[0].Outputs[?OutputKey==`APIUrl`].OutputValue' --output text)
          echo "### System information :lock: :camera:" >> $GITHUB_STEP_SUMMARY
          echo "Frontend: *Not yet implemented*" >> $GITHUB_STEP_SUMMARY
          echo "API: [$API_URL]($API_URL)" >> $GITHUB_STEP_SUMMARY

