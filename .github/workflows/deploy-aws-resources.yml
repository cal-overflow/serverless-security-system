name: Deploy AWS Resources

on:
  push:
    branches:
      - main
      - lambda-file-processing # TODO - remove this trigger
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  REGION: us-east-1
  BUCKET_STACK_NAME: security-system-stack-bucket

jobs:
   deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAM_ROLE_ARN }}
          aws-region: ${{ env.REGION }}
      
      - name: Deploy basic S3 bucket stack (for advanced things like lambda layer)
        run: |
          sam deploy --region $REGION -t bucket.template.yml --stack-name ${{ env.BUCKET_STACK_NAME }}
          STACK_BUCKET=$(aws cloudformation describe-stacks --stack-name=${{ env.BUCKET_STACK_NAME }} --region $REGION --query 'Stacks[0].Outputs[?OutputKey==`S3BucketName`].OutputValue' --output text)
          echo "STACK_BUCKET=$STACK_BUCKET" >> $GITHUB_OUTPUT

      - name: Sync lambda layer to S3
        run: |
          LAYER_NAME='opencv-layer'
          
          cd lambda && docker build -t opencv-layer -f opencv-layer-Dockerfile .
          docker run --rm -it -v $(pwd):/data python-opencv-layer cp /packages/cv2-python38.zip /data
          
          aws s3 cv2-python37.zip s3://${{ env.STACK_BUCKET }}/lambda/


      - name: Deploy Security System stack
        run: |
                    sam deploy --region $REGION --s3-bucket $STACK_BUCKET
 
