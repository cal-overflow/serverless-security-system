name: Deploy AWS Resources

on:
  push:
    branches:
      - main
      - lambda-file-processing # TODO - remove this trigger
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  REGION: us-east-1
  STACK_NAME: security-system
  BUCKET_STACK_NAME: security-system-stack-bucket
  LAMBDA_OPENCV_LAYER_NAME: python-opencv-layer
  VIDEO_PROCESOR_LAMBDA_FN_S3_KEY: lambda/video-process.zip

jobs:
   deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAM_ROLE_ARN }}
          aws-region: ${{ env.REGION }}
      
      - name: Deploy basic S3 bucket stack (for advanced things like lambda layer)
        run: |
          sam deploy --region $REGION -t bucket.template.yml --stack-name $BUCKET_STACK_NAME
          STACK_BUCKET=$(aws cloudformation describe-stacks --stack-name=$BUCKET_STACK_NAME --region $REGION --query 'Stacks[0].Outputs[?OutputKey==`S3BucketName`].OutputValue' --output text)
          echo "STACK_BUCKET=$STACK_BUCKET" >> $GITHUB_ENV

      # TODO - only perform this if the layer doesn't already exist
      - name: Create & Publish Lambda layer
        run: |
          cd lambda
          
          docker build -t $LAMBDA_OPENCV_LAYER_NAME -f opencv-layer-Dockerfile .
          docker run --rm -v $(pwd):/data $LAMBDA_OPENCV_LAYER_NAME cp /packages/cv2-python38.zip /data
         
          # Copy layer to S3 bucket & publish to lambda
          aws s3 cp cv2-python38.zip s3://$STACK_BUCKET/lambda/
          aws lambda publish-layer-version --layer-name $LAMBDA_OPENCV_LAYER_NAME --description "Python Open-CV layer" --content S3Bucket=$STACK_BUCKET,S3Key=lambda/cv2-python38.zip --compatible-runtimes python3.8

      - name: Upload lambda function source code
        run: |
         cd lambda/process-videos
         zip tmp.zip requirements.txt *.py
         aws s3 cp tmp.zip s3://$STACK_BUCKET/$VIDEO_PROCESOR_LAMBDA_FN_S3_KEY

      - name: Deploy Security System stack
        run: |
          sam deploy --region $REGION --s3-bucket $STACK_BUCKET --parameter-overrides 'StackS3Bucket="$STACK_BUCKET",VideoProcessFunctionS3Key="$VIDEO_PROCESOR_LAMBDA_FN_S3_KEY"'

          
          VIDEO_PROCESSER_FUNCTION_NAME=$(aws cloudformation describe-stacks --stack-name=$STACK_NAME --region $REGION --query 'Stacks[0].Outputs[?OutputKey=`VideoProcessorLambdaFunctionName`].OutputValue' --output text)
          # Attach opencv layer
          LAYER_ARN=$(aws lambda list-layer-versions --layer-name $LAMBDA_OPENCV_LAYER_NAME | jq -r '.LayerVersions[0].LayerVersionArn')
          aws lambda update-function-configuration --function-name $VIDEO_PROCESSER_FUNCTION_NAME --layers $LAYER_ARN


 
