name: Deploy AWS Resources

on:
  push:
    branches:
      - main
      - video-api # TODO - remove
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  REGION: us-east-1
  STACK_NAME: security-system-test-123 # TODO - change back
  BUCKET_STACK_NAME: security-system-stack-bucket
  UPLOAD_HANDLER_LAMBDA_FN_S3_KEY: lambda/upload_handler.zip
  ATTACH_S3_EVENT_LAMBDA_FN_S3_KEY: lambda/attach_s3_event_trigger.zip


jobs:
   deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cloud
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAM_ROLE_ARN }}
          aws-region: ${{ env.REGION }}
      
      - name: Deploy S3 bucket stack
        run: |
          sam deploy --region $REGION -t bucket.template.yml --stack-name $BUCKET_STACK_NAME
          STACK_BUCKET=$(aws cloudformation describe-stacks --stack-name=$BUCKET_STACK_NAME --region $REGION --query 'Stacks[0].Outputs[?OutputKey==`S3BucketName`].OutputValue' --output text)
          echo "STACK_BUCKET=$STACK_BUCKET" >> $GITHUB_ENV

      - name: Upload s3-event-trigger-attachment lambda function source code (to S3)
        run: |
          cd lambda/attach_s3_event_lambda_trigger
          zip tmp.zip requirements.txt *.py 
          aws s3 cp tmp.zip s3://$STACK_BUCKET/$ATTACH_S3_EVENT_LAMBDA_FN_S3_KEY
          
      - name: Upload upload-handler lambda function source code (to S3)
        run: |
          cd lambda/upload_handler
          zip tmp.zip requirements.txt *.py
          aws s3 cp tmp.zip s3://$STACK_BUCKET/$UPLOAD_HANDLER_LAMBDA_FN_S3_KEY

      - name: Deploy Security System stack
        run: |
          sam deploy --stack-name $STACK_NAME --region $REGION --s3-bucket $STACK_BUCKET --parameter-overrides "StackS3Bucket=$STACK_BUCKET" "AttachS3EventLambdaFunctionS3Key=$ATTACH_S3_EVENT_LAMBDA_FN_S3_KEY" "UploadHandlerFunctionS3Key=$UPLOAD_HANDLER_LAMBDA_FN_S3_KEY"
          BUCKET=$(aws cloudformation describe-stacks --stack-name=$STACK_NAME --region $REGION --query 'Stacks[0].Outputs[?OutputKey==`S3BucketName`].OutputValue' --output text)

          aws s3 cp settings.json s3://$BUCKET/configuration/

